networks:
  default:
    name: $COMPOSE_DEFAULT_NETWORK
    attachable: true
  gatewayz:
    name: gatewayz
    external: true

services:
  mysql:
    image: mariadb:10.6
    restart: unless-stopped
    tty: true
    environment:
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      SERVICE_TAGS: $SERVICE_TAGS
      SERVICE_NAME: mysql
    networks:
      - default
      - gatewayz
    volumes:
      # Mount the storage directory to the container, for storing db files.
      - $VOLUMES_DIR./mysql/_data:/var/lib/mysql
    ports:
      - 53306:3306

  redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - default
      - gatewayz
    volumes:
      # Mount the redis data directory to the container.
      - $VOLUMES_DIR./redis/_data:/var/lib/redis
    ports:
      - 56379:6379

  mongo:
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_INITDB_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_INITDB_ROOT_PASSWORD
    ports:
      - 57017:27017
    networks:
      - default
      - gatewayz
    volumes:
      - $VOLUMES_DIR./mongodb/_data:/data/db

  postgresql:
    image: docker.io/library/postgres:latest
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    ports:
      - 55432:5432
    networks:
      - default
      - gatewayz
    volumes:
      - $VOLUMES_DIR./postgresql/data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
      POSTGRES_USER: ${PG_USER:-root}
